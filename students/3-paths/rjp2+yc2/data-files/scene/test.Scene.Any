
/* -*- c++ -*- */
{ 
    entities = { 
        camera = Camera { 
            depthOfFieldSettings = DepthOfFieldSettings { 
                enabled = true; 
                farBlurRadiusFraction = 0.005; 
                farBlurryPlaneZ = -100; 
                farSharpPlaneZ = -40; 
                focusPlaneZ = -10; 
                lensRadius = 0.01; 
                model = "NONE"; 
                nearBlurRadiusFraction = 0.015; 
                nearBlurryPlaneZ = -0.25; 
                nearSharpPlaneZ = -1; 
            }; 
            
            filmSettings = FilmSettings { 
                antialiasingEnabled = true; 
                antialiasingFilterRadius = 0; 
                antialiasingHighQuality = true; 
                bloomRadiusFraction = 0.009; 
                bloomStrength = 0.2; 
                debugZoom = 1; 
                effectsEnabled = true; 
                gamma = 2.2; 
                sensitivity = 1; 
                toneCurve = Spline { 
                    control = ( 0, 0.1, 0.2, 0.5, 1 ); 
                    extrapolationMode = "LINEAR"; 
                    finalInterval = -1; 
                    interpolationMode = "CUBIC"; 
                    time = ( 0, 0.1, 0.2, 0.5, 1 ); 
                }; 
                
                vignetteBottomStrength = 0.05; 
                vignetteSizeFraction = 0.17; 
                vignetteTopStrength = 0.5; 
            }; 
            
            frame = CFrame::fromXYZYPRDegrees(10.476, 0.76049, 3.2492, 47.428, 14.909, 0 ); 
            motionBlurSettings = MotionBlurSettings { 
                cameraMotionInfluence = 0.5; 
                enabled = false; 
                exposureFraction = 0.75; 
                maxBlurDiameterFraction = 0.1; 
                numSamples = 27; 
            }; 
            
            projection = Projection { 
                farPlaneZ = -150; 
                fovDegrees = 90; 
                fovDirection = "HORIZONTAL"; 
                nearPlaneZ = -0.15; 
                pixelOffset = Vector2(0, 0 ); 
            }; 
            
            visualizationScale = 1; 
        }; 
        
        cube = VisibleEntity { 
            frame = CFrame::fromXYZYPRDegrees(-1.45074, -0.702163, -2.14801 ); 
            model = "cubeModel"; 
        }; 
        
        cylinderHollowRing = VisibleEntity { 
            frame = CFrame::fromXYZYPRDegrees(9.90223, -17.0874, 0.888988, 0, 50.4256 ); 
            model = "cylinderHollowRing0"; 
        }; 
        
        cylinderHollowStout = VisibleEntity { 
            frame = CFrame::fromXYZYPRDegrees(1.58841, -2.1717, 3.4773 ); 
            model = "cylinderHollowStout0"; 
        }; 
        
        cylinderTall = VisibleEntity { 
            frame = CFrame::fromXYZYPRDegrees(-4.0504, -3.27992, 2.49248, -84.6775, 21.0078, -28.7392 ); 
            model = "cylinderTall0"; 
        }; 
        
        cylinderTall_0 = VisibleEntity { 
            frame = CFrame::fromXYZYPRDegrees(-1.95553, -0.72993, -2.73256, 56.8741 ); 
            model = "cylinderTall0"; 
        }; 
        
        cylinderTall_0_0 = VisibleEntity { 
            frame = CFrame::fromXYZYPRDegrees(-3.96619, -0.72993, 8.3989, 56.8741 ); 
            model = "cylinderTall0"; 
        }; 
        
        cylinderTall_0_01 = VisibleEntity { 
            frame = CFrame::fromXYZYPRDegrees(-5.48536, -0.72993, 2.72428, 56.8741 ); 
            model = "cylinderTall0"; 
        }; 
        
        cylinderTall_0_01_0 = VisibleEntity { 
            frame = CFrame::fromXYZYPRDegrees(0.265184, -0.72993, 8.61161, 56.8741 ); 
            model = "cylinderTall0"; 
        }; 
        
        cylinderTall_0_01_0_0 = VisibleEntity { 
            frame = CFrame::fromXYZYPRDegrees(0.728596, -0.72993, 1.20422, 56.8741 ); 
            model = "cylinderTall0"; 
        }; 
        
        cylinderTall_0_01_0_0_0 = VisibleEntity { 
            frame = CFrame::fromXYZYPRDegrees(3.79424, -0.72993, 4.03852, 56.8741 ); 
            model = "cylinderTall0"; 
        }; 
        
        cylinderTall_0_01_0_0_0_0 = VisibleEntity { 
            frame = CFrame::fromXYZYPRDegrees(-1.2047, -0.708402, 4.7689, 56.8741, 2.82978e-06, 1.96652 ); 
            model = "cylinderTall0"; 
        }; 
        
        cylinderTall_0_0_0 = VisibleEntity { 
            frame = CFrame::fromXYZYPRDegrees(-3.96619, -0.72993, 8.3989, 56.8741 ); 
            model = "cylinderTall0"; 
        }; 
        
        cylinderTall_0_0_0_0 = VisibleEntity { 
            frame = CFrame::fromXYZYPRDegrees(-5.87205, -0.72993, -1.80976, 56.8741 ); 
            model = "cylinderTall0"; 
        }; 
        
        lightSource1 = Light { 
            attenuation = ( 0, 0, 1 ); 
            bulbPower = Power3(1e+06 ); 
            castsShadows = true; 
            frame = CFrame::fromXYZYPRDegrees(-22.3237, 33.9275, 59.3974, -20.6, -28.4 ); 
            shadowMapBias = 0.01; 
            shadowMapSize = Vector2int16(2048, 2048 ); 
            spotHalfAngleDegrees = 4; 
            spotSquare = true; 
            type = "SPOT"; 
        }; 
        
        lightSource1_0 = Light { 
            attenuation = ( 0, 0, 1 ); 
            bulbPower = Power3(10, 10, 1e+06 ); 
            castsShadows = true; 
            frame = CFrame::fromXYZYPRDegrees(39.1543, 31.5079, 47.5125, 40.5028, -27.3474, -24.2921 ); 
            shadowMapBias = 0.01; 
            shadowMapSize = Vector2int16(2048, 2048 ); 
            spotHalfAngleDegrees = 4; 
            spotSquare = true; 
            type = "SPOT"; 
        }; 
        
        lightSource1_01 = Light { 
            attenuation = ( 0, 0, 1 ); 
            bulbPower = Power3(1000000, 1000000, 1 ); 
            castsShadows = true; 
            frame = CFrame::fromXYZYPRDegrees(68.1611, -22.9356, 20.3466, 57.1939, 27.8141, 104.086 ); 
            shadowMapBias = 0.01; 
            shadowMapSize = Vector2int16(2048, 2048 ); 
            spotHalfAngleDegrees = 4; 
            spotSquare = true; 
            type = "SPOT"; 
        }; 
        
        skybox = Skybox { 
            texture = "cubemap/nightsky/nightsky_*.jpg"; 
        }; 
        
    }; 
    
    lightingEnvironment = LightingEnvironment { 
        ambientOcclusionSettings = AmbientOcclusionSettings { 
            bias = 0.023; 
            blurRadius = 4; 
            blurStepSize = 2; 
            depthPeelSeparationHint = 0.01; 
            edgeSharpness = 1; 
            enabled = true; 
            highQualityBlur = true; 
            intensity = 1; 
            monotonicallyDecreasingBilateralWeights = false; 
            numSamples = 19; 
            packBlurKeys = false; 
            radius = 0.75; 
            temporalFilterSettings = TemporalFilter::Settings { 
                falloffEndDistance = 0.07; 
                falloffStartDistance = 0.05; 
                hysteresis = 0; 
            }; 
            
            temporallyVarySamples = false; 
            useDepthPeelBuffer = false; 
            useNormalBuffer = true; 
            useNormalsInBlur = true; 
            zStorage = "HALF"; 
        }; 
        
        environmentMap = Texture::Specification { 
            encoding = Texture::Encoding { 
                readMultiplyFirst = 0.7; 
            }; 
            
            filename = "cubemap/uffizi/uffizi*.jpg"; 
        }; 
        
    }; 
    
    models = { 
        cubeModel = ArticulatedModel::Specification { 
            filename = "model/cube/cube.obj"; 
            preprocess = { 
                transformGeometry(all(), Matrix4::scale(50, 0.1, 50 ) ); 
                setMaterial(all(), Color3(1, 1, 1 ) ) }; 
            
        }; 
        
        cylinderHollowRing0 = ArticulatedModel::Specification { 
            alphaFilter = "DETECT"; 
            cachable = true; 
            cleanGeometrySettings = ArticulatedModel::CleanGeometrySettings { 
                allowVertexMerging = true; 
                forceComputeNormals = false; 
                forceComputeTangents = false; 
                forceVertexMerging = true; 
                maxEdgeLength = inf; 
                maxNormalWeldAngleDegrees = 8; 
                maxSmoothAngleDegrees = 65; 
            }; 
            
            filename = "C:\\Users\\cs371\\Documents\\371\\2-rays\\data-files\\model\\cylinderHollowRing.off"; 
            hairOptions = HairOptions { 
                separateSurfacePerStrand = false; 
                sideCount = 5; 
                strandRadiusMultiplier = 1; 
            }; 
            
            heightfieldOptions = HeightfieldOptions { 
                generateBackfaces = false; 
                textureScale = Vector2(1, 1 ); 
            }; 
            
            meshMergeOpaqueClusterRadius = "ALL"; 
            meshMergeTransmissiveClusterRadius = "NONE"; 
            objOptions = OBJOptions { 
                stripRefraction = false; 
                texCoord1Mode = "NONE"; 
            }; 
            
            refractionHint = "DYNAMIC_FLAT"; 
            scale = 1; 
            stripLightMapCoords = false; 
            stripLightMaps = false; 
            stripMaterials = false; 
            stripVertexColors = false; 
        }; 
        
        cylinderHollowStout0 = ArticulatedModel::Specification { 
            alphaFilter = "DETECT"; 
            cachable = true; 
            cleanGeometrySettings = ArticulatedModel::CleanGeometrySettings { 
                allowVertexMerging = true; 
                forceComputeNormals = false; 
                forceComputeTangents = false; 
                forceVertexMerging = true; 
                maxEdgeLength = inf; 
                maxNormalWeldAngleDegrees = 8; 
                maxSmoothAngleDegrees = 65; 
            }; 
            
            filename = "C:\\Users\\cs371\\Documents\\371\\2-rays\\data-files\\model\\cylinderHollowStout.off"; 
            hairOptions = HairOptions { 
                separateSurfacePerStrand = false; 
                sideCount = 5; 
                strandRadiusMultiplier = 1; 
            }; 
            
            heightfieldOptions = HeightfieldOptions { 
                generateBackfaces = false; 
                textureScale = Vector2(1, 1 ); 
            }; 
            
            meshMergeOpaqueClusterRadius = "ALL"; 
            meshMergeTransmissiveClusterRadius = "NONE"; 
            objOptions = OBJOptions { 
                stripRefraction = false; 
                texCoord1Mode = "NONE"; 
            }; 
            
            preprocess = { 
                setMaterial(all(), Color3(1, 0, 1 ) ) }; 
            
            refractionHint = "DYNAMIC_FLAT"; 
            scale = 0.2; 
            stripLightMapCoords = false; 
            stripLightMaps = false; 
            stripMaterials = false; 
            stripVertexColors = false; 
        }; 
        
        cylinderTall0 = ArticulatedModel::Specification { 
            alphaFilter = "DETECT"; 
            cachable = true; 
            cleanGeometrySettings = ArticulatedModel::CleanGeometrySettings { 
                allowVertexMerging = true; 
                forceComputeNormals = false; 
                forceComputeTangents = false; 
                forceVertexMerging = true; 
                maxEdgeLength = inf; 
                maxNormalWeldAngleDegrees = 8; 
                maxSmoothAngleDegrees = 65; 
            }; 
            
            filename = "C:\\Users\\cs371\\Documents\\371\\2-rays\\data-files\\model\\cylinderTall.off"; 
            hairOptions = HairOptions { 
                separateSurfacePerStrand = false; 
                sideCount = 5; 
                strandRadiusMultiplier = 1; 
            }; 
            
            heightfieldOptions = HeightfieldOptions { 
                generateBackfaces = false; 
                textureScale = Vector2(1, 1 ); 
            }; 
            
            meshMergeOpaqueClusterRadius = "ALL"; 
            meshMergeTransmissiveClusterRadius = "NONE"; 
            objOptions = OBJOptions { 
                stripRefraction = false; 
                texCoord1Mode = "NONE"; 
            }; 
            
            refractionHint = "DYNAMIC_FLAT"; 
            scale = 0.2; 
            stripLightMapCoords = false; 
            stripLightMaps = false; 
            stripMaterials = false; 
            stripVertexColors = false; 
        }; 
        
    }; 
    
    name = "Test Scene"; 
} 