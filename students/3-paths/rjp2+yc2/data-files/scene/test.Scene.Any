
/* -*- c++ -*- */
{ 
    entities = { 
        camera = Camera { 
            depthOfFieldSettings = DepthOfFieldSettings { 
                enabled = true; 
                farBlurRadiusFraction = 0.005; 
                farBlurryPlaneZ = -100; 
                farSharpPlaneZ = -40; 
                focusPlaneZ = -10; 
                lensRadius = 0.01; 
                model = "NONE"; 
                nearBlurRadiusFraction = 0.015; 
                nearBlurryPlaneZ = -0.25; 
                nearSharpPlaneZ = -1; 
            }; 
            
            filmSettings = FilmSettings { 
                antialiasingEnabled = true; 
                antialiasingFilterRadius = 0; 
                antialiasingHighQuality = true; 
                bloomRadiusFraction = 0.009; 
                bloomStrength = 0.2; 
                debugZoom = 1; 
                effectsEnabled = true; 
                gamma = 2.2; 
                sensitivity = 1; 
                toneCurve = Spline { 
                    control = ( 0, 0.1, 0.2, 0.5, 1 ); 
                    extrapolationMode = "LINEAR"; 
                    finalInterval = -1; 
                    interpolationMode = "CUBIC"; 
                    time = ( 0, 0.1, 0.2, 0.5, 1 ); 
                }; 
                
                vignetteBottomStrength = 0.05; 
                vignetteSizeFraction = 0.17; 
                vignetteTopStrength = 0.5; 
            }; 
            
            //frame = CFrame::fromXYZYPRDegrees(1.7, 0.6, 1.9, 41, -5, 0 ); 
            frame = CFrame::fromXYZYPRDegrees(-80.012, 33.163, 55.951, -69.008, 5.8862, 0);
            motionBlurSettings = MotionBlurSettings { 
                cameraMotionInfluence = 0.5; 
                enabled = false; 
                exposureFraction = 0.75; 
                maxBlurDiameterFraction = 0.1; 
                numSamples = 27; 
            }; 
            
            projection = Projection { 
                farPlaneZ = -150; 
                fovDegrees = 90; 
                fovDirection = "HORIZONTAL"; 
                nearPlaneZ = -0.15; 
                pixelOffset = Vector2(0, 0 ); 
            }; 
            
            visualizationScale = 1; 
        }; 
        
        castle = VisibleEntity { 
            frame = CFrame::fromXYZYPRDegrees(-23.464, 1.85489, -51.9788 ); 
            model = "castleModel"; 
        }; 
        
        ground = VisibleEntity { 
            frame = CFrame::fromXYZYPRDegrees(0, 0, 0, 0, -90, 0 ); 
            model = "groundModel"; 
        }; 
        
        knight = VisibleEntity { 
            frame = CFrame::fromXYZYPRDegrees(36.2156, 9.87108, 31.5903 ); 
            model = "knightModel"; 
        }; 
        
        old = VisibleEntity { 
            frame = CFrame::fromXYZYPRDegrees(-1.02472, 37.8769, -8.71046, -0.107908, 0.102302 ); 
            model = "oldModel"; 
        }; 
        
        rain = VisibleEntity { 
            frame = CFrame::fromXYZYPRDegrees(12.0725, 49.8378, 3.59273 ); 
            model = "rainModel"; 
        }; 
        
        skybox = Skybox { 
            texture = "cubemap/noonclouds/noonclouds_*.png"; 
        }; 
        
          light1 = Light { 
            attenuation = ( 0, 0, 1 ); 
            bulbPower = Power3(1e+5 ); 
            castsShadows = true; 
            enabled = true; 
            extent = Vector2(0.75, 0.75 ); 
            shadowMapSize = Vector2int16(2048, 2048 ); 
            frame = CFrame::fromXYZYPRDegrees(-50.2269, 32.2025, 53.5725, -62.6347, -4.33422, -6.7306 ); 
            producesDirectIllumination = true; 
            producesIndirectIllumination = true; 
            shadowMapSize = Vector2int16(1024, 1024 ); 
            spotHalfAngleDegrees = 45; 
            spotSquare = true; 
            type = "SPOT"; 
        }; 
        
        sword = VisibleEntity { 
            frame = CFrame::fromXYZYPRDegrees(36.1997, 54.8125, 31.5996 ); 
            model = "swordModel"; 
        }; 
        
       
    }; 
    
    lightingEnvironment = LightingEnvironment { 
        ambientOcclusionSettings = AmbientOcclusionSettings { 
            bias = 0.00945834; 
            blurRadius = 4; 
            blurStepSize = 2; 
            depthPeelSeparationHint = 0.01; 
            edgeSharpness = 1; 
            enabled = true; 
            highQualityBlur = true; 
            intensity = 1; 
            monotonicallyDecreasingBilateralWeights = false; 
            numSamples = 45; 
            packBlurKeys = false; 
            radius = 1.68223; 
            temporalFilterSettings = TemporalFilter::Settings { 
                falloffEndDistance = 0.07; 
                falloffStartDistance = 0.05; 
                hysteresis = 0; 
            }; 
            
            temporallyVarySamples = false; 
            useDepthPeelBuffer = false; 
            useNormalBuffer = true; 
            useNormalsInBlur = true; 
            zStorage = "HALF"; 
        }; 
        
        environmentMap = Texture::Specification { 
            encoding = Texture::Encoding { 
                readMultiplyFirst = 0.7; 
            }; 
            
            filename = "cubemap/uffizi/uffizi*.jpg"; 
        }; 
        
    }; 
    
    models = { 
        castleModel = ArticulatedModel::Specification { 
            filename = "castle.obj"; 
        }; 
        
        groundModel = ArticulatedModel::Specification { 
            filename = "square.ifs"; 
            scale = 20; 
        }; 
        
        knightModel = ArticulatedModel::Specification { 
            filename = "knight.obj"; 
        }; 
        
        oldModel = ArticulatedModel::Specification { 
            filename = "old.obj"; 
        }; 
        
        rainModel = ArticulatedModel::Specification { 
            filename = "rain.obj"; 
        }; 
        
        swordModel = ArticulatedModel::Specification { 
            filename = "sword.obj"; 
        }; 
        
    }; 
    
    name = "Test Scene"; 
} 